From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Shelley Vohr <shelley.vohr@gmail.com>
Date: Wed, 14 Aug 2019 15:36:05 -0700
Subject: fix: fix vc++ incompatible inline calls

When we create the vector contents inline instead of in a separate call
it created a vc++ incompatibility. This fixes that by create the vector
contents in a separate call.

This should be removed once the fix is upstreamed.

diff --git a/chrome/test/chromedriver/webauthn_commands.cc b/chrome/test/chromedriver/webauthn_commands.cc
index b0d4d62bc5003682523382600f8f6c815fdf089c..97609a785f5cdc4263322c3d8c2d025ebd0a5508 100644
--- a/chrome/test/chromedriver/webauthn_commands.cc
+++ b/chrome/test/chromedriver/webauthn_commands.cc
@@ -36,7 +36,7 @@ base::DictionaryValue MapParams(
 // Converts the string |keys| in |params| from base64url to base64. Returns a
 // status error if conversion of one of the keys failed.
 Status ConvertBase64UrlToBase64(base::Value* params,
-                                const std::vector<const std::string> keys) {
+                                const std::vector<std::string> keys) {
   for (const std::string key : keys) {
     base::Value* maybe_value = params->FindKey(key);
     if (!maybe_value)
@@ -60,7 +60,7 @@ Status ConvertBase64UrlToBase64(base::Value* params,
 
 // Converts the string |keys| in |params| from base64 to base64url.
 void ConvertBase64ToBase64Url(base::Value* params,
-                              const std::vector<const std::string> keys) {
+                              const std::vector<std::string> keys) {
   for (const std::string key : keys) {
     std::string* maybe_value = params->FindStringKey(key);
     if (!maybe_value)
@@ -136,9 +136,10 @@ Status ExecuteAddCredential(WebView* web_view,
           {"credential.signCount", "signCount"},
       },
       params);
+  const std::vector<std::string> keys =
+      {"credentialId", "privateKey", "userHandle"};
   Status status =
-      ConvertBase64UrlToBase64(mapped_params.FindKey("credential"),
-                               {"credentialId", "privateKey", "userHandle"});
+      ConvertBase64UrlToBase64(mapped_params.FindKey("credential"), keys);
   if (status.IsError())
     return status;
 
@@ -155,9 +156,10 @@ Status ExecuteGetCredentials(WebView* web_view,
   if (status.IsError())
     return status;
 
+  const std::vector<std::string> keys =
+      {"credentialId", "privateKey", "userHandle"};
   for (base::Value& credential : (*value)->FindKey("credentials")->GetList()) {
-    ConvertBase64ToBase64Url(&credential,
-                             {"credentialId", "privateKey", "userHandle"});
+    ConvertBase64ToBase64Url(&credential, keys);
   }
 
   return status;
